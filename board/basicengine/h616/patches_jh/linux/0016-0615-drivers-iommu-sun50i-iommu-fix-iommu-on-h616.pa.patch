From 40bdad70dc4063cd3a4b46ecda5bc8413b8241b3 Mon Sep 17 00:00:00 2001
From: Ulrich Hecht <uli@basicengine.org>
Date: Wed, 4 Oct 2023 17:36:12 +0200
Subject: [PATCH 016/184] 
 0615-drivers-iommu-sun50i-iommu-fix-iommu-on-h616.patch

---
 drivers/iommu/sun50i-iommu.c | 28 +++++++++-------------------
 1 file changed, 9 insertions(+), 19 deletions(-)

diff --git a/drivers/iommu/sun50i-iommu.c b/drivers/iommu/sun50i-iommu.c
index 5b585eace..a539b35cb 100644
--- a/drivers/iommu/sun50i-iommu.c
+++ b/drivers/iommu/sun50i-iommu.c
@@ -108,7 +108,6 @@ struct sun50i_iommu {
 
 	struct iommu_domain *domain;
 	struct iommu_group *group;
-	struct kmem_cache *pt_pool;
 };
 
 struct sun50i_iommu_domain {
@@ -449,6 +448,8 @@ static int sun50i_iommu_enable(struct sun50i_iommu *iommu)
 		    IOMMU_TLB_PREFETCH_MASTER_ENABLE(3) |
 		    IOMMU_TLB_PREFETCH_MASTER_ENABLE(4) |
 		    IOMMU_TLB_PREFETCH_MASTER_ENABLE(5));
+	iommu_write(iommu, 0x84, 0);
+	iommu_write(iommu, 0x30, 0);
 	iommu_write(iommu, IOMMU_INT_ENABLE_REG, IOMMU_INT_MASK);
 	iommu_write(iommu, IOMMU_DM_AUT_CTRL_REG(SUN50I_IOMMU_ACI_NONE),
 		    IOMMU_DM_AUT_CTRL_RD_UNAVAIL(SUN50I_IOMMU_ACI_NONE, 0) |
@@ -523,14 +524,15 @@ static void *sun50i_iommu_alloc_page_table(struct sun50i_iommu *iommu,
 	dma_addr_t pt_dma;
 	u32 *page_table;
 
-	page_table = kmem_cache_zalloc(iommu->pt_pool, gfp);
+	page_table = (u32 *)__get_free_pages(GFP_KERNEL | __GFP_ZERO | GFP_DMA32,
+					     get_order(PT_SIZE));
 	if (!page_table)
 		return ERR_PTR(-ENOMEM);
 
 	pt_dma = dma_map_single(iommu->dev, page_table, PT_SIZE, DMA_TO_DEVICE);
 	if (dma_mapping_error(iommu->dev, pt_dma)) {
 		dev_err(iommu->dev, "Couldn't map L2 Page Table\n");
-		kmem_cache_free(iommu->pt_pool, page_table);
+		free_pages((unsigned long)page_table, get_order(PT_SIZE));
 		return ERR_PTR(-ENOMEM);
 	}
 
@@ -546,7 +548,7 @@ static void sun50i_iommu_free_page_table(struct sun50i_iommu *iommu,
 	phys_addr_t pt_phys = virt_to_phys(page_table);
 
 	dma_unmap_single(iommu->dev, pt_phys, PT_SIZE, DMA_TO_DEVICE);
-	kmem_cache_free(iommu->pt_pool, page_table);
+	free_pages((unsigned long)page_table, get_order(PT_SIZE));
 }
 
 static u32 *sun50i_dte_get_page_table(struct sun50i_iommu_domain *sun50i_domain,
@@ -679,7 +681,7 @@ static struct iommu_domain *sun50i_iommu_domain_alloc(unsigned type)
 	if (!sun50i_domain)
 		return NULL;
 
-	sun50i_domain->dt = (u32 *)__get_free_pages(GFP_KERNEL | __GFP_ZERO,
+	sun50i_domain->dt = (u32 *)__get_free_pages(GFP_KERNEL | __GFP_ZERO | GFP_DMA32,
 						    get_order(DT_SIZE));
 	if (!sun50i_domain->dt)
 		goto err_free_domain;
@@ -989,18 +991,9 @@ static int sun50i_iommu_probe(struct platform_device *pdev)
 	platform_set_drvdata(pdev, iommu);
 	iommu->dev = &pdev->dev;
 
-	iommu->pt_pool = kmem_cache_create(dev_name(&pdev->dev),
-					   PT_SIZE, PT_SIZE,
-					   SLAB_HWCACHE_ALIGN,
-					   NULL);
-	if (!iommu->pt_pool)
-		return -ENOMEM;
-
 	iommu->group = iommu_group_alloc();
-	if (IS_ERR(iommu->group)) {
-		ret = PTR_ERR(iommu->group);
-		goto err_free_cache;
-	}
+	if (IS_ERR(iommu->group))
+		return PTR_ERR(iommu->group);
 
 	iommu->base = devm_platform_ioremap_resource(pdev, 0);
 	if (IS_ERR(iommu->base)) {
@@ -1053,9 +1046,6 @@ static int sun50i_iommu_probe(struct platform_device *pdev)
 err_free_group:
 	iommu_group_put(iommu->group);
 
-err_free_cache:
-	kmem_cache_destroy(iommu->pt_pool);
-
 	return ret;
 }
 
-- 
2.39.2

